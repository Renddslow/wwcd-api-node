const {
  NotFoundError,
} = require('app/errors');

module.exports = (service) => ({
  getAll: async () => {
    const prizes = await service.db.collection('prizes')
      .get();

    return Promise.all(prizes.docs.map(async (d) => {
      const prize = Object.assign({}, d.data(), {
        id: d.id,
      });

      const tickets = await service.db.collection('tickets')
        .where('prize', '==', service.db.doc(`prizes/${prize.id}`))
        .get();
      prize.committedTickets = tickets.docs.length;
      return prize;
    }));
  },
  get: async ({ id }) => {
    const prize = await service.db.collection('prizes').doc(id).get();

    if (!prize.data()) {
      throw new NotFoundError();
    }

    const prizeData = Object.assign({}, prize.data(), { id });

    const tickets = await service.db.collection('tickets')
      .where('prize', '==', service.db.doc(`prizes/${prize.id}`))
      .get();
    prizeData.committedTickets = tickets.docs.length;
    return prizeData;
  },
});